45/**186. Reverse Words in a String II
Given an input string , reverse the string word by word. 

Example:

Input:  ["t","h","e"," ","s","k","y"," ","i","s"," ","b","l","u","e"]
Output: ["b","l","u","e"," ","i","s"," ","s","k","y"," ","t","h","e"]

Note: 

    A word is defined as a sequence of non-space characters.
    The input string does not contain leading or trailing spaces.
    The words are always separated by a single space.

Follow up: Could you do it in-place without allocating extra space?

Solution
   To do it in place, the only solution is to reverse it first, then reverse the words again.
  
Code
   class Solution {
     public:
       void reverse(vector<char>& str, int i, int j){
           reverse( str.begin(), str.end());
           for( int i = 0, j = 0; i<str.size(); i = j+1){
             for(j = i; j< str.size(); j++){
                if(str[j] == ' ') break;
             }
             reverse(str.begin()+i, str.begin()+j);
           }
       }
