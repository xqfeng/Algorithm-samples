246. Strobogrammatic Number
Easy

A strobogrammatic number is a number that looks the same when rotated 180 degrees (looked at upside down).

Write a function to determine if a number is strobogrammatic. The number is represented as a string.

Example 1:

Input:  "69"
Output: true

Example 2:

Input:  "88"
Output: true

Example 3:

Input:  "962"
Output: false

Anasys and Solution
This issue is to find a special number that look the same.
its a linear issue and can be used two pointers to iterator from the two side of the string to find out if thay are pairs
in the special number list.

class Solution {
public:
    bool isStrobogrammatic(string num) {
        bool ret = true;
        unordered_map<char,char>nmap = {make_pair('6','9'),
                                       make_pair('9','6'),
                                       make_pair('1','1'),
                                       make_pair('8','8'),
                                       make_pair('0','0')};
        int i = 0, j = num.length()-1;
        while(i<=j){
            if(nmap[num[i]] != num[j]) {
                ret = false;
                break;
            }
            i++;
            j--;
        }
        return ret;
    }
};
